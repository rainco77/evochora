# Evochora Compiler Messages (English)

# DefinitionExtractor errors
definitionExtractor.defineArguments=.DEFINE expects exactly 2 arguments (name and value)
definitionExtractor.unexpectedDirectiveOutsideBlock=Unexpected directive {0} outside of a block
definitionExtractor.blockNotClosed=Block starting with {0} is not closed
definitionExtractor.directiveNeedsName=Directive {0} requires a name.
definitionExtractor.procFormalMustNotBePercent=Formal parameter ''{0}'' must not start with %, as it is reserved for registers.
definitionExtractor.routineParameterCollidesWithInstruction=Routine parameter ''{0}'' collides with an instruction name.
definitionExtractor.pregInvalidSyntax=.PREG directive has invalid syntax. Expected: .PREG %ALIAS_NAME <index>
definitionExtractor.pregNameMustStartPercent=.PREG alias ''{0}'' must start with a percent sign (%).
definitionExtractor.pregInvalidIndex=Invalid index ''{0}'' for .PREG directive. Must be an integer.
definitionExtractor.invalidPregOutsideProc=Invalid .PREG outside .PROC
definitionExtractor.autoRetAppended=NOTE: No RET found in PROC ''{0}''. Appending one automatically. (Defined in {1}:{2})

# CodeExpander errors
codeExpander.invalidImportSyntax=Invalid .IMPORT syntax. Expected .IMPORT <PROC_NAME> FROM "<FILE_PATH>" [AS <ALIAS>]
codeExpander.invalidIncludeSyntax=Invalid .INCLUDE syntax. Expected .INCLUDE "<FILE_PATH>"
codeExpander.unknownRoutine=Unknown routine called: ''{0}''
missing.import.for.require=Missing IMPORT for required PROC(s): {0}

# PassManager errors
passManager.unknownType=Unknown type ''{0}'' in .PLACE directive
passManager.unknownInstruction=Unknown instruction ''{0}''
passManager.labelCollidesWithInstruction=Label ''{0}'' cannot have the same name as an instruction.

# PlaceholderResolver errors
call.with.requiresWithProc=.WITH clause can only be used with .PROC procedures.
label.not.found=Label not found: {0}

# General errors
assembler.exception.formattedMessage=ERROR in %s:%d: %s\n>> %s
