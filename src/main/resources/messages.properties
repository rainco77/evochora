# English messages
# This file will be populated with keys and English translations.
assembler.exception.formattedMessage=FATAL ERROR in ''{0}'' (line {1}):\n{2}\n> {3}
assembler.sha256NotFound=SHA-256 not found
codeExpander.maxRecursionDepth=Maximum recursion depth for macros/includes reached: {0}
codeExpander.infiniteLoopInMacro=Infinite recursion in macro detected: {0} -> {1}
codeExpander.infiniteLoopInRoutine=Infinite recursion in routine detected: {0} -> {1}
codeExpander.wrongArgumentCountForMacro=Wrong number of arguments for macro {0}
codeExpander.invalidIncludeSyntax=Invalid .INCLUDE syntax. Expected: .INCLUDE <routine> AS <instance> WITH <args...>
codeExpander.invalidIncludeStrictSyntax=Invalid .INCLUDE_STRICT syntax. Expected: .INCLUDE_STRICT <routine> AS <instance> WITH <args...>
codeExpander.invalidImportSyntax=Invalid .IMPORT syntax. Expected: .IMPORT LIB.NAME AS ALIAS
codeExpander.unknownRoutine=Unknown routine: {0}
codeExpander.wrongArgumentCountForRoutine=Wrong number of arguments for routine {0}. Expected {1}, but got {2}.
definitionExtractor.nestedDefinitionsNotAllowed=Nested definitions are not allowed.
definitionExtractor.directiveNeedsName={0} requires a name.
definitionExtractor.routineParameterCollidesWithInstruction=Routine parameter ''{0}'' collides with an instruction.
definitionExtractor.unexpectedDirectiveOutsideBlock=Unexpected {0} outside of a definition block.
definitionExtractor.blockClosedWithWrongEndTag=Block ''{0}'' was closed with the wrong end tag.
definitionExtractor.blockNotClosed=Block ''{0}'' was not closed.
definitionExtractor.defineArguments=".DEFINE nneds exactly tow arguments: NAME VALUE."
definitionExtractor.procFormalMustNotBePercent=Formal parameter must not start with ''%'': {0}
definitionExtractor.pregInvalidSyntax=.PREG expects exactly two arguments: %NAME INDEX(0|1)
definitionExtractor.pregNameMustStartPercent=.PREG name must start with ''%'': {0}
definitionExtractor.pregInvalidIndex=Invalid .PREG index: {0}. Only 0 or 1 are allowed.
definitionExtractor.pregInvalidContext=.PREG is only allowed inside a .PROC block
passManager.unknownInstruction=Unknown instruction: {0}
passManager.labelRedeclared=Label ''{0}'' has been declared more than once.
passManager.labelCollidesWithInstruction=Label ''{0}'' has the same name as an instruction.
passManager.unexpectedOutputTypeInPass2=Internal assembler error: Unexpected AssemblerOutput type ({0}) in phase 2.
passManager.unknownType=Unknown type: {0}
call.with.requiresWithProc=CALL .WITH requires a target PROC with formal parameters (declared via .PROC NAME WITH ...).
call.with.usedOnDsProc=CALL .WITH is not allowed for DS-ABI procedures (no .PROC WITH).
call.with.arityMismatch=CALL .WITH argument count does not match the target PROC's formal parameter count (arity mismatch).
call.with.nonRegisterArg=CALL .WITH expects register operands; invalid actual: {0}
import.procNotFound=Unknown PROC alias or target: {0} (requires .WITH for register-ABI procs)
definitionExtractor.autoRetAppended=Warning: .ENDP appended an implicit RET to procedure ''{0}'' at {1}:{2}.
call.with.duplicateActuals=Warning: CALL .WITH to ''{0}'' binds duplicate actuals ({1}); last formal wins.
placeholderResolver.jumpInstructionCoordinateNotFound=Internal error: Coordinate for jump instruction not found.
placeholderResolver.unknownLabelForJump=Unknown label for jump instruction: {0}
placeholderResolver.targetLabelCoordinateNotFound=Internal error: Coordinate for target label not found: {0}
placeholderResolver.unknownLabelForVector=Unknown label for vector assignment: {0}
placeholderResolver.vectorInstructionCoordinateNotFound=Internal error: Coordinate for vector instruction not found.
instruction.errorCallingPlanMethod=Error calling plan method for {0}
instruction.errorCallingAssembleMethod=Error calling assemble method for {0}
instruction.errorRegisteringInstruction=Error registering instruction: {0}
instruction.idAlreadyRegistered=Instruction ID {0} already registered for another class.
instruction.nameAlreadyRegistered=Instruction name ''{0}'' already registered.
appView.restartError.title=Restart Error
appView.restartError.header=The simulation could not be restarted.
appView.restartError.content=Error: {0}
header.button.playPause=Play/Pause
header.button.play=Play
header.button.pause=Pause
header.button.nextTick=Next Tick
header.button.restart=Restart
header.button.loggingOn=Logging: ON
header.button.loggingOff=Logging: OFF
header.button.loggingDisabled=Logging: ---
header.button.zoomNormal=Zoom: Normal
header.button.zoomPixel=Zoom: Pixel
header.label.tick=Tick: {0}
footer.noOrganismSelected=No organism selected.\nDRs: ---\nPRs: ---\nDS: ---\nRS: ---\nNext: ---\nLine: ---
footer.organismDetails=ID: %d %s | ER: %d | IP: %s | DP: %s | DV: %s\n
footer.organismStatus.dead=(DEAD)
footer.label.drs=DRs:
footer.label.prs=PRs:
footer.label.stack=DS:
footer.label.rs=RS:
footer.label.nextInstruction=Next:
footer.label.line=Line:
footer.notAvailable=N/A
